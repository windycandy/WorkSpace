
Android部分Handler机制
https://blog.csdn.net/ClAndEllen/article/details/79343538
https://www.cnblogs.com/JohnTsai/p/5259869.html   Android进阶——深入浅出Handler


服务Service与线程Thread的区别
https://blog.csdn.net/javazejian/article/details/52709857


AsyncTask
https://blog.csdn.net/iispring/article/details/50639090

HandlerThread
https://blog.csdn.net/ly502541243/article/details/52414637

IntentService与Service的区别
https://www.cnblogs.com/denluoyia/p/5997452.html

AsyncTask防止Memory Leaks(内存泄漏)
(造成内存泄漏的原因，往大了说，无非就是一些特殊的原因导致Activity在该销毁的时候无法被销毁，
而AsyncTask在创建的时候会持有当前Activity的引用，所以也有可能导致内存泄漏！)
https://blog.csdn.net/sinat_35670989/article/details/54139855
https://blog.csdn.net/u013718120/article/details/53032986?locationNum=6&fps=1

a、System.currentTimeMillis()获取的是系统的时间，可以使用SystemClock.setCurrentTimeMillis(long millis)进行设置。
   如果使用System.currentTimeMillis()来获取当前时间进行计时，应该考虑监听ACTION_TIME_TICK, ACTION_TIME_CHANGED 和 
   ACTION_TIMEZONE_CHANGED这些广播ACTION，如果系统时间发生了改变，可以通过监听广播来获取。 
b、SystemClock.uptimeMillis()表示系统开机到当前的时间总数，单位是毫秒，但是，当系统进入深度
   睡眠（CPU休眠、屏幕休眠、设备等待外部输入）时间就会停止，但是不会受到时钟缩放、空闲或者其他节能机制的影响。 
c、SystemClock.elapsedRealtime()和SystemClock.elapsedRealtimeNanos()表示系统开机到当前的时间总数。
   它包括了系统深度睡眠的时间。这个时钟是单调的，它保证一直计时，即使CPU处于省电模式，所以它是推荐使用的时间计时器。
   
   

汪国全:
YY 传你大法
汪国全:
音乐卡顿

<1> perf-defconfig,或user版本
CONFIG_SERIAL_MSM_HSL=y
CONFIG_SERIAL_MSM_HSL_CONSOLE=y
<2> Low CPU frequency
<3> High-priority threads with SCHED_FIFO scheduling
<4> Long scheduling latency
<5> Interrupts
汪国全:
音频卡顿可能和performance有关原因   


https://blog.csdn.net/u014702999/article/category/6410190
--Android音频系统之二音频框架
--Android音频系统之三AudioTrack
--Android音频系统之四AudioPolicy





							